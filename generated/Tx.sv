// Generated by CIRCT firtool-1.62.0
module Tx(
  input        clock,
               reset,
  output       io_txd,
               io_channel_ready,
  input        io_channel_valid,
  input  [7:0] io_channel_bits
);

  reg  [10:0] shiftReg;
  reg  [19:0] cntReg;
  reg  [3:0]  bitsReg;
  wire        _io_channel_ready_T = cntReg == 20'h0;
  always @(posedge clock) begin
    if (reset) begin
      shiftReg <= 11'h7FF;
      cntReg <= 20'h0;
      bitsReg <= 4'h0;
    end
    else if (_io_channel_ready_T) begin
      if (|bitsReg) begin
        shiftReg <= {1'h1, shiftReg[10:1]};
        bitsReg <= bitsReg - 4'h1;
      end
      else begin
        shiftReg <= io_channel_valid ? {2'h3, io_channel_bits, 1'h0} : 11'h7FF;
        if (io_channel_valid)
          bitsReg <= 4'hB;
      end
      cntReg <= 20'h1B1;
    end
    else
      cntReg <= cntReg - 20'h1;
  end // always @(posedge)
  assign io_txd = shiftReg[0];
  assign io_channel_ready = _io_channel_ready_T & ~(|bitsReg);
endmodule

