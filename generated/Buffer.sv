// Generated by CIRCT firtool-1.62.0
module Buffer(
  input        clock,
               reset,
  output       io_in_ready,
  input        io_in_valid,
  input  [7:0] io_in_bits,
  input        io_out_ready,
  output       io_out_valid,
  output [7:0] io_out_bits
);

  reg       stateReg;
  reg [7:0] dataReg;
  always @(posedge clock) begin
    if (reset) begin
      stateReg <= 1'h0;
      dataReg <= 8'h0;
    end
    else begin
      if (stateReg)
        stateReg <= ~io_out_ready & stateReg;
      else
        stateReg <= io_in_valid | stateReg;
      if (~stateReg & io_in_valid)
        dataReg <= io_in_bits;
    end
  end // always @(posedge)
  assign io_in_ready = ~stateReg;
  assign io_out_valid = stateReg;
  assign io_out_bits = dataReg;
endmodule

